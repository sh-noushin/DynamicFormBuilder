// <auto-generated />
using System;
using FormBuilder.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FormBuilder.DataAccess.Migrations
{
    [DbContext(typeof(FormBuilderDbContext))]
    [Migration("20250704181542_SeedInitialForms")]
    partial class SeedInitialForms
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FormBuilder.Domain.FormControlValues.FormControlValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FormControlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormControlId");

                    b.ToTable("FormControlValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ccc111aa-0000-0000-0000-000000000001"),
                            FormControlId = new Guid("aaa111aa-0000-0000-0000-000000000003"),
                            Value = "Male"
                        },
                        new
                        {
                            Id = new Guid("ccc111aa-0000-0000-0000-000000000002"),
                            FormControlId = new Guid("aaa111aa-0000-0000-0000-000000000003"),
                            Value = "Female"
                        });
                });

            modelBuilder.Entity("FormBuilder.Domain.FormControls.FormControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FormVersionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormVersionId");

                    b.ToTable("FormControls");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaa111aa-0000-0000-0000-000000000001"),
                            FormVersionId = new Guid("d372874d-577c-49d9-ae98-cb445e6a7b9c"),
                            IsRequired = true,
                            Label = "Name",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("aaa111aa-0000-0000-0000-000000000002"),
                            FormVersionId = new Guid("d372874d-577c-49d9-ae98-cb445e6a7b9c"),
                            IsRequired = true,
                            Label = "Email",
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("aaa111aa-0000-0000-0000-000000000003"),
                            FormVersionId = new Guid("d372874d-577c-49d9-ae98-cb445e6a7b9c"),
                            IsRequired = false,
                            Label = "Gender",
                            Type = 7
                        });
                });

            modelBuilder.Entity("FormBuilder.Domain.FormSubmissionValues.FormSubmissionValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FormControlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FormSubmissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormControlId");

                    b.HasIndex("FormSubmissionId");

                    b.ToTable("FormSubmissionValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eee111aa-0000-0000-0000-000000000001"),
                            FormControlId = new Guid("aaa111aa-0000-0000-0000-000000000001"),
                            FormSubmissionId = new Guid("ddd111aa-0000-0000-0000-000000000001"),
                            Value = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("eee111aa-0000-0000-0000-000000000002"),
                            FormControlId = new Guid("aaa111aa-0000-0000-0000-000000000002"),
                            FormSubmissionId = new Guid("ddd111aa-0000-0000-0000-000000000001"),
                            Value = "john@example.com"
                        },
                        new
                        {
                            Id = new Guid("eee111aa-0000-0000-0000-000000000003"),
                            FormControlId = new Guid("aaa111aa-0000-0000-0000-000000000003"),
                            FormSubmissionId = new Guid("ddd111aa-0000-0000-0000-000000000001"),
                            Value = "Male"
                        });
                });

            modelBuilder.Entity("FormBuilder.Domain.FormSubmissions.FormSubmission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FormVersionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FormVersionId");

                    b.ToTable("FormSubmissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ddd111aa-0000-0000-0000-000000000001"),
                            FormVersionId = new Guid("d372874d-577c-49d9-ae98-cb445e6a7b9c"),
                            SubmittedAt = new DateTime(2025, 7, 4, 18, 15, 41, 690, DateTimeKind.Utc).AddTicks(2369)
                        });
                });

            modelBuilder.Entity("FormBuilder.Domain.FormVersions.FormVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FormId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FormVersions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d372874d-577c-49d9-ae98-cb445e6a7b9c"),
                            CreatedAt = new DateTime(2025, 7, 4, 18, 15, 41, 689, DateTimeKind.Utc).AddTicks(8889),
                            FormId = new Guid("332ce45d-814e-46d3-8e1a-a129ab63b58d"),
                            Version = "v1.0"
                        },
                        new
                        {
                            Id = new Guid("309f9fe8-1975-4526-821d-e13abb8ad0dc"),
                            CreatedAt = new DateTime(2025, 7, 4, 18, 15, 41, 689, DateTimeKind.Utc).AddTicks(9117),
                            FormId = new Guid("332ce45d-814e-46d3-8e1a-a129ab63b58d"),
                            Version = "v2.0"
                        },
                        new
                        {
                            Id = new Guid("cc3d790a-da55-47db-98b7-75dac4dd5de5"),
                            CreatedAt = new DateTime(2025, 7, 4, 18, 15, 41, 689, DateTimeKind.Utc).AddTicks(9121),
                            FormId = new Guid("2daa2bec-d937-44e1-8b3e-9c2331acc94b"),
                            Version = "v1.0"
                        },
                        new
                        {
                            Id = new Guid("a0727ace-3630-4c6c-8583-432df14cffc9"),
                            CreatedAt = new DateTime(2025, 7, 4, 18, 15, 41, 689, DateTimeKind.Utc).AddTicks(9125),
                            FormId = new Guid("2daa2bec-d937-44e1-8b3e-9c2331acc94b"),
                            Version = "v2.0"
                        },
                        new
                        {
                            Id = new Guid("f3b7fa94-1bef-4f8d-835d-73865f07c77f"),
                            CreatedAt = new DateTime(2025, 7, 4, 18, 15, 41, 689, DateTimeKind.Utc).AddTicks(9128),
                            FormId = new Guid("ef1ac28c-b2b4-4a1e-bc99-7ad17b0c5461"),
                            Version = "v1.0"
                        },
                        new
                        {
                            Id = new Guid("488cc030-a7a9-4135-81b1-cd4338fddf0c"),
                            CreatedAt = new DateTime(2025, 7, 4, 18, 15, 41, 689, DateTimeKind.Utc).AddTicks(9130),
                            FormId = new Guid("ef1ac28c-b2b4-4a1e-bc99-7ad17b0c5461"),
                            Version = "v2.0"
                        });
                });

            modelBuilder.Entity("FormBuilder.Domain.Forms.Form", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Forms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("332ce45d-814e-46d3-8e1a-a129ab63b58d"),
                            Name = "Survey Form 1"
                        },
                        new
                        {
                            Id = new Guid("2daa2bec-d937-44e1-8b3e-9c2331acc94b"),
                            Name = "Survey Form 2"
                        },
                        new
                        {
                            Id = new Guid("ef1ac28c-b2b4-4a1e-bc99-7ad17b0c5461"),
                            Name = "Survey Form 3"
                        });
                });

            modelBuilder.Entity("FormBuilder.Domain.FormControlValues.FormControlValue", b =>
                {
                    b.HasOne("FormBuilder.Domain.FormControls.FormControl", "FormControl")
                        .WithMany("Values")
                        .HasForeignKey("FormControlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormControl");
                });

            modelBuilder.Entity("FormBuilder.Domain.FormControls.FormControl", b =>
                {
                    b.HasOne("FormBuilder.Domain.FormVersions.FormVersion", "FormVersion")
                        .WithMany("Controls")
                        .HasForeignKey("FormVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormVersion");
                });

            modelBuilder.Entity("FormBuilder.Domain.FormSubmissionValues.FormSubmissionValue", b =>
                {
                    b.HasOne("FormBuilder.Domain.FormControls.FormControl", "FormControl")
                        .WithMany("SubmissionValues")
                        .HasForeignKey("FormControlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FormBuilder.Domain.FormSubmissions.FormSubmission", "FormSubmission")
                        .WithMany("Values")
                        .HasForeignKey("FormSubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormControl");

                    b.Navigation("FormSubmission");
                });

            modelBuilder.Entity("FormBuilder.Domain.FormSubmissions.FormSubmission", b =>
                {
                    b.HasOne("FormBuilder.Domain.FormVersions.FormVersion", "FormVersion")
                        .WithMany()
                        .HasForeignKey("FormVersionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FormVersion");
                });

            modelBuilder.Entity("FormBuilder.Domain.FormVersions.FormVersion", b =>
                {
                    b.HasOne("FormBuilder.Domain.Forms.Form", "Form")
                        .WithMany("Versions")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("FormBuilder.Domain.FormControls.FormControl", b =>
                {
                    b.Navigation("SubmissionValues");

                    b.Navigation("Values");
                });

            modelBuilder.Entity("FormBuilder.Domain.FormSubmissions.FormSubmission", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("FormBuilder.Domain.FormVersions.FormVersion", b =>
                {
                    b.Navigation("Controls");
                });

            modelBuilder.Entity("FormBuilder.Domain.Forms.Form", b =>
                {
                    b.Navigation("Versions");
                });
#pragma warning restore 612, 618
        }
    }
}
